name: EmuSC CI
on:
  push:
    branches: [ master ]

jobs:
  build:
    strategy:
      matrix:
       include:
        - { os: windows-latest, cc: g++, shell: 'msys2 {0}', bin: 'win32'}
        - { os: ubuntu-latest, cc: g++-10, shell: bash, bin: 'linux'}
        - { os: macos-latest, cc: g++, shell: bash, bin: 'macOS'}
    runs-on: ${{matrix.os}}
    defaults:
      run:
        shell: ${{matrix.shell}}
    steps:
    - if: ${{runner.os == 'macOS'}}
      name: Install macOS Dependencies 
      run: brew install autoconf automake libtool
    - if: ${{runner.os == 'Linux'}}
      name: Install Linux Dependencies 
      run: sudo apt-get install -y libasound2-dev
    - name: Checkout Repo  
      uses: actions/checkout@v2
    - if: ${{runner.os == 'Windows'}}
      name: Install Windows Dependencies 
      uses: msys2/setup-msys2@v2
      with:
        msystem: mingw64
        install: mingw-w64-x86_64-gcc make autotools
    - name: Run Autotools
      run: ./autogen.sh
    - if: ${{runner.os == 'Linux'}}
      name: Run Configure (Linux)
      run: ./configure CXXFLAGS='-pthread'
    - if: ${{runner.os == 'Windows'}}
      name: Run Configure (Windows)
      run: ./configure
    - if: ${{runner.os == 'macOS'}}
      name: Run Configure (macOS)
      run: ./configure CXXFLAGS='-std=c++11'
    - name: Compile Code
      run: make CXX=${{matrix.cc}}
    - if: ${{runner.os != 'Windows'}}
      name: Rename ${{runner.os}} Binary
      run: mv src/emusc src/emusc-${{matrix.bin}}
    - if: ${{runner.os == 'Windows'}}
      name: Rename ${{runner.os}} Binary
      run: mv src/emusc.exe src/emusc-${{matrix.bin}}.exe
    - name: Upload All Binaries
      uses: actions/upload-artifact@v2
      with:
        name: build-${{runner.os}}
        path: |
          src/emusc-${{matrix.bin}}*
          
  publish:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get Build Tag
        id: get_tag
        run: echo ::set-output name=BUILD_TAG::build-$(date +'%Y%m%d%H%M')
      - uses: actions/download-artifact@v2
        with:
          name: build-Linux
          path: build-Linux
      - uses: actions/download-artifact@v2
        with:
          name: build-macOS
          path: build-macOS
      - uses: actions/download-artifact@v2
        with:
          name: build-Windows
          path: build-Windows
      - if: github.event_name == 'push' 
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: ${{ steps.get_tag.outputs.BUILD_TAG }}
          tag_name: ${{ steps.get_tag.outputs.BUILD_TAG }}
          prerelease: true
          files: |
            build-Linux/*
            build-Windows/*
            build-macOS/*
